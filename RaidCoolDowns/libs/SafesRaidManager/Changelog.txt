v1.1.8
* Change: Forced dead Party/Raid members in to an out of combat state.

----
v1.1.7

Unit Tracking
* Change: Offline Party/Raid members are now forced out of combat.
* Change: Combat states are now monitored and updated more aggressively, but with less CPU overhead.

----
v1.1.6

Unit Tracking
* Fixed: Possible nil name values are now caught.

----
v1.1.5

Rift Version
* Change: Now compatible with 1.9.

Events
* Group
** New: Event.SafesRaidManager.Group.Reload = string, string (UnitID, Specifier)

System
* Initialization
** Change: Now uses the new Event.Unit.Availability.Full event to initialize the start-up procedure.
* Units
** Change: Now uses the new Event.Unit.Availability.Full event to Load unit details.

----
v1.1.4
* Rift Version
* Change: Now compatible with 1.8.
* New: LibSRM initialization string now gives its Version number.
* New: SRM will now maintain a Name List look-up table for quick name searches. See new command below.
* New: Command - LibSRM.Group.NameSearch(UnitName) -- returns Specifier, UnitID if available or nil.
* New: Event.SafesRaidManager.Group.Mode -- string("raid"/"party"). This is an educated guys on if you're in a raid or party.
* New: Event.SafesRaidManager.Group.Offline -- Group member is now off-line/on-line (true/false)
* Change: The player ready event (Stall) will now trigger only once the player is actually available.
* Change: SRM now replaces its existing event table entry with a new one, rather than deleting it.
* Change: SRM no longer runs an infinite Time check loop while waiting for Player available status.
* Engine Fixes
** Fixed (By Mere): Changes made to new Unit match break code was epic fail.
** Fixed (By Mere): Optimized condensed loop had incorrect UID variable name for Pet matching.
** Fixed: Several non-local local variables are now local.
** Removed: Redundant code from original engine.

v1.1.3
* Engine Tuning
** Change: Function SRM_UnitAvailable is now down to a single loop iteration when checking for queued units.

v1.1.2
* Player Ready
** Change: The .Player.Ready event will now only fire once the players name is available.
* Death Monitoring
** Fixed: New group members now correctly add to LibSRM.Dead
** Change: Adjusted how .combat state is registered for new group members.

v1.1.1
* Directory Structure
** Change: Addons only require that SafesRaidManager be Embedded or be a dependency.
v1.1.0
* Engine
** Various engine improvements and tweaks
* Group Events
** New: Event.SafesRaidManager.Group.Combat.Enter	-- Single Group member enters combat
** New: Event.SafesRaidManager.Group.Combat.Leave	-- Single Group member leaves combat
** New: Event.SafesRaidManager.Group.Combat.Start	-- Group now flagged as in combat
** New: Event.SafesRaidManager.Group.Combat.End		-- Group now flagged as out of combat
** New: Event.SafesRaidManager.Group.Combat.Damage	-- Group damage done
** New: Event.SafesRaidManager.Group.Combat.Heal	-- Group healing done
** New: Event.SafesRaidManager.Group.Combat.Death	-- Group member deaths
** New: Event.SafesRaidManager.Group.Combat.Res		-- Group resurrects
* Player Events
** New: Event.SafesRaidManager.Player.Combat.Enter	-- Player enters combat
** New: Event.SafesRaidManager.Player.Combat.Leave	-- Player leaves combat
* System Events
** New: Event.SafesRaidManager.Combat.Enter		-- Non-Raid/group unit enters combat
** New: Event.SafesRaidManager.Combat.Leave		-- Non-Raid/group unit leaves combat
** New: Event.SafesRaidManager.Combat.Death		-- Non-Raid/group unit deaths
** New: Event.SafesRaidManager.Combat.Heal		-- Non-Raid/group unit Heals
** New: Event.SafesRaidManager.Combat.Damage		-- Non-Raid/group unit damage
----
v1.0.0
* Status pushed to stable release.
* Now includes Zorba's LibUnitChange
----
v0.0.4 Beta
* Small change to the Event message firing order for Group.Join and Group.Leave. Player.Leave will now fire after the last Group.Leave event message, and Player.Join will now be the first event message to fire before a list of Group.Join event messages (inclusive of the player) to populate a newly created group or raid.
----
v0.0.3 Beta
* Bug Fix: Pet.Add returning nil incorrectly, or not firing at all.
* Non-Breaking Changes:
** Changed Initialization order, and events will not fire now until the player has fully loaded.
----
v0.0.2 Beta
* Added full Player and Group internal pet management, events and commands
* New Events
** Event.SafesRaidManager.Pet.Add < Returns PetID {string}, OwnerID {string}
** Event.SafesRaidManager.Pet.Remove < Returns PetID {string}, OwnerID {string}
** Event.SafesRaidManager.Player.Pet.Add < Returns PetID {string}
** Event.SafesRaidManager.Player.Pet.Remove < Returns nil
* New Commands
** LibSRM.Group.UnitExists(UnitID) < returns GroupXX Specifier if it exists, or nil
** LibSRM.Group.PetExists(PetID) < returns GroupXX Specifier and OwnerID if exists, or nil
** LibSRM.GroupCount() < returns 0 (ungrouped) or 2-20 if grouped.
----
v0.0.1 Beta
* Initial Release 